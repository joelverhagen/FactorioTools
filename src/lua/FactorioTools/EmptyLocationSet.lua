-- Generated by CSharp.lua Compiler
local System = System
local KnapcodeOilField
System.import(function (out)
  KnapcodeOilField = Knapcode.FactorioTools.OilField
end)
System.namespace("Knapcode.FactorioTools.OilField", function (namespace)
  namespace.class("EmptyLocationSet", function (namespace)
    local Instance, getCount, Add, Clear, Contains, CopyTo, EnumerateItems, ExceptWith, 
    Overlaps, Remove, SetEquals, UnionWith, UnionWith1, class, static
    static = function (this)
      Instance = class()
      this.Instance = Instance
    end
    getCount = function (this)
      return 0
    end
    Add = function (this, location)
      System.throw(System.NotSupportedException())
    end
    Clear = function (this)
    end
    Contains = function (this, location)
      return false
    end
    CopyTo = function (this, array)
    end
    EnumerateItems = function (this)
      return System.Array.Empty(KnapcodeOilField.Location)
    end
    ExceptWith = function (this, other)
    end
    Overlaps = function (this, other)
      return false
    end
    Remove = function (this, location)
      return false
    end
    SetEquals = function (this, other)
      return other:getCount() == 0
    end
    UnionWith = function (this, other)
      System.throw(System.NotSupportedException())
    end
    UnionWith1 = function (this, other)
      System.throw(System.NotSupportedException())
    end
    class = {
      base = function (out)
        return {
          out.Knapcode.FactorioTools.OilField.ILocationSet
        }
      end,
      getCount = getCount,
      Add = Add,
      Clear = Clear,
      Contains = Contains,
      CopyTo = CopyTo,
      EnumerateItems = EnumerateItems,
      ExceptWith = ExceptWith,
      Overlaps = Overlaps,
      Remove = Remove,
      SetEquals = SetEquals,
      UnionWith = UnionWith,
      UnionWith1 = UnionWith1,
      static = static
    }
    return class
  end)
end)
