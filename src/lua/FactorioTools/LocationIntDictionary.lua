-- Generated by CSharp.lua Compiler
local System = System
local KnapcodeOilField
local ListLocation
System.import(function (out)
  KnapcodeOilField = Knapcode.FactorioTools.OilField
  ListLocation = System.List(KnapcodeOilField.Location)
end)
System.namespace("Knapcode.FactorioTools.OilField", function (namespace)
  namespace.class("LocationIntDictionary_1", function (namespace)
    return function (T)
      local get, set, getCount, getKeys, getValues, Add, Clear, ContainsKey, 
      EnumeratePairs, Remove, TryAdd, TryGetValue, GetIndex, __ctor1__, __ctor2__
      local ListT = System.List(T)
      local DictInt32T = System.Dictionary(System.Int32, T)
      local KeyValuePairLocationT = System.KeyValuePair(KnapcodeOilField.Location, T)
      local ListKeyValuePairLocationT = System.List(KeyValuePairLocationT)
      __ctor1__ = function (this, width)
        this._width = width
        this._dictionary = DictInt32T()
      end
      __ctor2__ = function (this, width, capacity)
        this._width = width
        this._dictionary = DictInt32T(capacity)
      end
      get = function (this, index)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = index
          default = location.Y * this._width + location.X
        end
        return this._dictionary:get(default)
      end
      set = function (this, index, value)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = index
          default = location.Y * this._width + location.X
        end
        this._dictionary:set(default, value)
      end
      getCount = function (this)
        return this._dictionary:getCount()
      end
      getKeys = function (this)
        local keys = ListLocation(this._dictionary:getCount())
        for _, item in System.each(this._dictionary:getKeys()) do
          keys:Add(KnapcodeOilField.Location(System.mod(item, this._width), System.div(item, this._width)))
        end
        return keys
      end
      getValues = function (this)
        local values = ListT(this._dictionary:getCount())
        for _, item in System.each(this._dictionary:getValues()) do
          values:Add(item)
        end
        return values
      end
      Add = function (this, key, value)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = key
          default = location.Y * this._width + location.X
        end
        this._dictionary:AddKeyValue(default, value)
      end
      Clear = function (this)
        this._dictionary:Clear()
      end
      ContainsKey = function (this, key)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = key
          default = location.Y * this._width + location.X
        end
        return this._dictionary:ContainsKey(default)
      end
      EnumeratePairs = function (this)
        local pairs = ListKeyValuePairLocationT(this._dictionary:getCount())
        for _, pair in System.each(this._dictionary) do
          pairs:Add(KeyValuePairLocationT(KnapcodeOilField.Location(System.mod(pair[1], this._width), System.div(pair[1], this._width)), pair[2]))
        end
        return pairs
      end
      Remove = function (this, key)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = key
          default = location.Y * this._width + location.X
        end
        return this._dictionary:RemoveKey(default)
      end
      TryAdd = function (this, key, value)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = key
          default = location.Y * this._width + location.X
        end
        return this._dictionary:TryAdd(default, value)
      end
      TryGetValue = function (this, key, value)
        -- inline Knapcode.FactorioTools.OilField.LocationIntDictionary<T>.GetIndex(Knapcode.FactorioTools.OilField.Location)
        local default
        do
          local location = key
          default = location.Y * this._width + location.X
        end
        local extern
        extern, value = this._dictionary:TryGetValue(default, nil)
        return extern, value
      end
      GetIndex = function (this, location)
        return location.Y * this._width + location.X
      end
      return {
        base = function (out)
          return {
            out.Knapcode.FactorioTools.OilField.ILocationDictionary_1(T)
          }
        end,
        _width = 0,
        get = get,
        set = set,
        getCount = getCount,
        getKeys = getKeys,
        getValues = getValues,
        Add = Add,
        Clear = Clear,
        ContainsKey = ContainsKey,
        EnumeratePairs = EnumeratePairs,
        Remove = Remove,
        TryAdd = TryAdd,
        TryGetValue = TryGetValue,
        __ctor__ = {
          __ctor1__,
          __ctor2__
        }
      }
    end
  end)
end)
