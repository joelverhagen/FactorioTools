-- Generated by CSharp.lua Compiler
local System = System
local KnapcodeOilField
System.import(function (out)
  KnapcodeOilField = Knapcode.FactorioTools.OilField
end)
System.namespace("Knapcode.FactorioTools.OilField", function (namespace)
  namespace.class("ExistingPipeGrid", function (namespace)
    local GetNeighbors, __ctor__
    __ctor__ = function (this, squareGrid, pipes)
      System.base(this).__ctor__[1](this, squareGrid, false)
      this.Pipes = pipes
    end
    GetNeighbors = function (this, neighbors, id)
      local a = id:Translate(1, 0)
      local default
      if this.Pipes:Contains(a) then
        default = a
      else
        default = KnapcodeOilField.Location.getInvalid()
      end
      neighbors:set(0, default)

      local b = id:Translate(0, - 1)
      local extern
      if this.Pipes:Contains(b) then
        extern = b
      else
        extern = KnapcodeOilField.Location.getInvalid()
      end
      neighbors:set(1, extern)

      local c = id:Translate(- 1, 0)
      local ref
      if this.Pipes:Contains(c) then
        ref = c
      else
        ref = KnapcodeOilField.Location.getInvalid()
      end
      neighbors:set(2, ref)

      local d = id:Translate(0, 1)
      local out
      if this.Pipes:Contains(d) then
        out = d
      else
        out = KnapcodeOilField.Location.getInvalid()
      end
      neighbors:set(3, out)
    end
    return {
      base = function (out)
        return {
          out.Knapcode.FactorioTools.OilField.SquareGrid
        }
      end,
      GetNeighbors = GetNeighbors,
      __ctor__ = __ctor__
    }
  end)
end)
