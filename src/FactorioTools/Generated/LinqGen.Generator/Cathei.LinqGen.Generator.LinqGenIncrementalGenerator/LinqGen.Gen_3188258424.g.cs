// DO NOT EDIT
// Generated by LinqGen.Generator
#nullable disable
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using Cathei.LinqGen;
using Cathei.LinqGen.Hidden;

namespace Cathei.LinqGen.Hidden
{
    // Non-exported Enumerable should consider anonymous type, thus it will be internal
    internal struct Gen_yeblT3 : IInternalStub<global::Knapcode.FactorioTools.OilField.Location>
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        internal Gen_yeblT3(global::System.Collections.Generic.List<global::Knapcode.FactorioTools.OilField.Location> source_yeblT3) : this()
        {
            this.source_yeblT3 = source_yeblT3;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public int Count() => this.source_yeblT3.Count;
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public Select_exoqa Select(Func<global::Knapcode.FactorioTools.OilField.Location, global::DelaunatorSharp.IPoint> selector_exoqa) => new Select_exoqa(this, selector_exoqa);
        [EditorBrowsable(EditorBrowsableState.Never)]
        internal global::System.Collections.Generic.List<global::Knapcode.FactorioTools.OilField.Location> source_yeblT3;
    }
}

namespace Cathei.LinqGen
{
    // Extension class needs to be internal to prevent ambiguous resolution
    internal static partial class LinqGenExtensions_Gen_yeblT3
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static Gen_yeblT3 Gen(this global::System.Collections.Generic.List<global::Knapcode.FactorioTools.OilField.Location> source_yeblT3) => new Gen_yeblT3(source_yeblT3);
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static global::Knapcode.FactorioTools.OilField.Location MinBy(this Gen_yeblT3 source, Func<global::Knapcode.FactorioTools.OilField.Location, int> selector)
        {
            int index_yeblT3 = default;
            index_yeblT3 = -1;
            int resultKey_mgxM71 = default;
            ValueCompareToComparer<int> comparer = default;
            bool isSet_mgxM71 = default;
            global::Knapcode.FactorioTools.OilField.Location result_mgxM71 = default;
            while (true)
            {
                if ((uint)++index_yeblT3 >= (uint)source.source_yeblT3.Count)
                    break;
                var current_yeblT3 = source.source_yeblT3[index_yeblT3];
                var key_mgxM71 = selector.Invoke(current_yeblT3);
                if (!isSet_mgxM71 || 0 < comparer.Compare(resultKey_mgxM71, key_mgxM71))
                {
                    isSet_mgxM71 = true;
                    result_mgxM71 = current_yeblT3;
                    resultKey_mgxM71 = key_mgxM71;
                }
            }

            if (!isSet_mgxM71)
                ExceptionUtils.ThrowInvalidOperation();
            return result_mgxM71;
        }
    }
}